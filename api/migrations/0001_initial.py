# Generated by Django 3.2.14 on 2022-07-10 13:27

import api.models.promotions
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.CharField(choices=[('customer', 'customer'), ('merchant', 'merchant')], default='customer', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('createAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('planID', models.AutoField(primary_key=True, serialize=False)),
                ('planName', models.CharField(max_length=50)),
                ('amount_min', models.FloatField(validators=[django.core.validators.MinValueValidator(1000.0)])),
                ('amount_max', models.FloatField(validators=[django.core.validators.MaxValueValidator(500000.0)])),
                ('tenure_min', models.IntegerField(validators=[django.core.validators.MinValueValidator(3)])),
                ('tenure_max', models.IntegerField(validators=[django.core.validators.MaxValueValidator(11)])),
                ('benefitPercentage', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(99.0)])),
                ('benefitType', models.CharField(choices=[('cashback', 'cashback'), ('extraVoucher', 'extraVoucher')], default='cashback', max_length=30)),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brand', to='api.brand')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('valid_from', models.DateField(default=None, null=True, validators=[api.models.promotions.min_date])),
                ('valid_till', models.DateField(default=None, null=True)),
                ('max_users_allowed', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('users_enrolled', models.IntegerField(default=0, null=True)),
                ('benefitPercentage', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(99.0)])),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.plan')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerGoal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('selectedAmount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000.0), django.core.validators.MaxValueValidator(500000.0)])),
                ('selectedTenure', models.IntegerField(validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(11)])),
                ('startDate', models.DateField(auto_now_add=True)),
                ('depositedAmount', models.IntegerField()),
                ('benefitPercentage', models.IntegerField()),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('benefitType', models.CharField(choices=[('cashback', 'cashback'), ('extraVoucher', 'extraVoucher')], default='cashback', max_length=30)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.plan')),
                ('promotion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.promotion')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
